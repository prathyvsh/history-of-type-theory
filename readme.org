* History of Type Theory

A catalogue of the history of type theory as it evolved

Type theory can be thought to be as a theory of constructions. Dependent types make this theory of dependent constructions.
Euclid’s geometrical proofs do both construction and then deduce the true propositions from them.

There are influential philosophy of mathematics in this line such as intuitionism and constructivism which provide support to using theory of types as a foundation of mathematics. Type theory restricts its language to only the things that has been constructed. This means that when there are judgements in type theory, it is about things that has been constructed or when two constructions are equal, not when something is not a type.

* Timeline

* Russell / Whitehead

* Curry

* Lambda Calculus with Types

* AUTOMATH

* Hindley - Milner

* Martin Löf

* John Reynolds

** Relational Parametricity
** Poly

* Homotopy Type Theory

* Dependent Types

* Concepts

** Simply Typed
** Impredicativity
** Stratification

* Algebraic Data Types

* Type Classes

* Resources

* Books
** [[https://amzn.to/2RqJ0UM][Type Theory and Formal Proof]]
Herman Nederpelt, Rob Geuvers

** [[https://amzn.to/3mj7j5n][Types and Programming Languages]]
Benjamin Pierce

** [[https://amzn.to/3hxWHfj][The Little Typer]]
Daniel Friedman, David Thrane Christiansen

* Papers

** [[http://www.cs.cmu.edu/afs/cs/user/jcr/ftp/typesabpara.pdf][Types, Abstraction, and Parametric Polymorphism]]
John Reynolds (1983)

** [[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.35.9758][Inductive and Coinductive Types with Iteration and Recursion]]
Herman Geuvers (1992)

** [[https://arxiv.org/abs/2009.05539][A general definition of dependent type theories]]
Andrej Bauer, Philipp G. Haselwarter, Peter LeFanu Lumsdaine

* Blogposts

* Compilations

** [[https://github.com/jozefg/learn-tt][Learn Type Theory by Daniel Gratzer]]
